@model IEnumerable<admin.Models.StoreIdentityModels.AspNetUser>



<div class="col-md-12">

    <h1 class="text-center"><i class="fas fa-user text-success"></i> Customers </h1>

    <!-- This table to implement advanced search functionality on the Table we have. -->
    <!-- Bootstrap and JQueru codes are written in site,js. -->
    <!-- This table is hidden, to show it we use the below button, and the javascript code is in site.js-->
    <table cellpadding="3" cellspacing="0" border="0" style="width: 67%; margin: 0 auto 2em auto;" id="AdvancedSearchTable" class="hide">
        <thead>
            <tr>
                <th>
                    Target
                </th>
                <th>
                    Search text
                </th>
                <th>
                    Treat as regex
                </th>
                <th>
                    Use smart search
                </th>
            </tr>
        </thead>
        <tbody>
            <!-- Be carefull, replace the i in the data-column="i" and id="col'i'_filter" with the correct column number from the real table.-->
            <!-- This i is handled in the jquery code. -->
            <tr id="filter_global">
                <td>Global search</td>
                <td align="center"><input type="text" class="global_filter" id="global_filter"></td>
                <td align="center"><input type="checkbox" class="global_filter" id="global_regex"></td>
                <td align="center"><input type="checkbox" class="global_filter" id="global_smart" checked="checked"></td>
            </tr>
            <tr id="filter_col2" data-column="2">
                <td>Column - @Html.DisplayNameFor(model => model.DisplayName)</td>
                <td align="center"><input type="text" class="column_filter" id="col2_filter"></td>
                <td align="center"><input type="checkbox" class="column_filter" id="col2_regex"></td>
                <td align="center"><input type="checkbox" class="column_filter" id="col2_smart" checked="checked"></td>
            </tr>
            <tr id="filter_col3" data-column="3">
                <td>Column - @Html.DisplayNameFor(model => model.UserName)</td>
                <td align="center"><input type="text" class="column_filter" id="col3_filter"></td>
                <td align="center"><input type="checkbox" class="column_filter" id="col3_regex"></td>
                <td align="center"><input type="checkbox" class="column_filter" id="col3_smart" checked="checked"></td>
            </tr>
            <tr id="filter_col5" data-column="5">
                <td>Column - @Html.DisplayNameFor(model => model.Email)</td>
                <td align="center"><input type="text" class="column_filter" id="col5_filter"></td>
                <td align="center"><input type="checkbox" class="column_filter" id="col5_regex"></td>
                <td align="center"><input type="checkbox" class="column_filter" id="col5_smart" checked="checked"></td>
            </tr>
        </tbody>
    </table>


    <h5 class="text-left text-danger">-Customers (Website users) Cannot be created from here, customers register from the shopping website !</h5>
    <h5 class="text-left text-danger">-To delete a customer record here, please delete the customer's address in the "Addresses" table first !</h5>
    <h5 class="text-left text-danger">-Deleting a customer will keep the subsequent child orders in "Orders" table safe ! !</h5> 
    <h5 class="text-left text-danger">-DisplayName is only allowed to be modified. To reset a password, a customer should do it from ResetPassword page in the shopping website, and if the customer was unable to do that, delete the customer's record here and ask the customer to create an acoount with the same Email !</h5>

    <div class="row">
        <div class="col-md-6 text-left">
            <!--send id=0 to the method so that the method understands it is a create process. (we can write "null" instead of "new {id=0}" but problems might happen)-->
            <a onclick="showInPopup('@Url.Action("AddOrEdit","Customers",new {id=""},Context.Request.Scheme)','New Customer')" class="btn btn-success text-white my-1 disabled"><i class="fas fa-plus"></i> New Customer</a>
        </div>
        <div class="col-md-6 text-right">
            <button class="btn btn-outline-primary" data-toggle="tooltip" data-placement="top" title="Delete" id="AdvancedSearchButton" style="width: 11em">Advanced Search</button>
        </div>
    </div>



    <table class="table" id="DataTable">
        <thead class="thead-light">
            <tr>
                <th>
                    # <!-- This column to have row number. JQuery in site.js will do that-->
                </th>
                <th>
                    Options
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DisplayName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserName)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.NormalizedUserName)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.NormalizedEmail)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.EmailConfirmed)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.PasswordHash)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.SecurityStamp)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.ConcurrencyStamp)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.PhoneNumber)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
                    </th>*@
                @*<th>
                        @Html.DisplayNameFor(model => model.TwoFactorEnabled)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.LockoutEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LockoutEnabled)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AccessFailedCount)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td id="rowNumber">
                        <!-- This column to havve row number. JQuery in site.js will do that-->
                    </td>
                    <td>
                        <div class="row">
                            <!-- Edit -->
                            <a onclick="showInPopup('@Url.Action("AddOrEdit","Customers",new {id=item.Id},Context.Request.Scheme)','Update Customer')" data-toggle="tooltip" data-placement="top" title="Edit Customer" class="btn btn-light btn-sm ml-1"><i class="fas fa-pencil-alt"></i></a>

                            <!-- Delete -->
                            <form asp-action="Delete" asp-route-id="@item.Id" onsubmit="return jQueryAjaxDelete(this)" class="d-inline">
                                <input type="hidden" asp-for="@item.Id" />
                                <button type="submit" data-toggle="tooltip" data-placement="top" title="Delete" class="btn btn-light btn-sm"><i class="fas fa-trash-alt"></i></button>
                            </form>
                        </div>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DisplayName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.NormalizedUserName)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.NormalizedEmail)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailConfirmed)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.PasswordHash)
                        </td>*@
                    @*<td>
                            @Html.DisplayFor(modelItem => item.SecurityStamp)
                        </td>*@
                    @*<td>
                            @Html.DisplayFor(modelItem => item.ConcurrencyStamp)
                        </td>*@
                    @*<td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>*@
                    @*<td>
                            @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
                        </td>*@
                    @*<td>
                            @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.LockoutEnd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LockoutEnabled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccessFailedCount)
                    </td>
                </tr>
            }
        </tbody>
    </table>


</div>
